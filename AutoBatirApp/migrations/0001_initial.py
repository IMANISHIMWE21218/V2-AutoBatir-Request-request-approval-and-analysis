# Generated by Django 3.1.13 on 2023-08-31 08:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NationalID',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('National_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('NIDphoto', models.ImageField(blank=True, null=True, upload_to='docs_other/id_photo/')),
                ('FirstName', models.CharField(blank=True, max_length=35, null=True)),
                ('LastName', models.CharField(blank=True, max_length=35, null=True)),
                ('Districts', models.CharField(blank=True, max_length=35, null=True)),
                ('Sectors', models.CharField(blank=True, max_length=35, null=True)),
                ('Cells', models.CharField(blank=True, max_length=35, null=True)),
                ('villages', models.CharField(blank=True, max_length=35, null=True)),
                ('Address_street', models.CharField(blank=True, max_length=1000, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=10, null=True)),
                ('dob', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'National_ID',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_engineer', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UPI',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('UPI_id', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('parcel_ID', models.IntegerField(blank=True, null=True)),
                ('Districts', models.CharField(blank=True, max_length=35, null=True)),
                ('Sectors', models.CharField(blank=True, max_length=35, null=True)),
                ('Cells', models.CharField(blank=True, max_length=35, null=True)),
                ('villages', models.CharField(blank=True, max_length=35, null=True)),
                ('MainZonecode', models.CharField(blank=True, max_length=25, null=True)),
                ('MainZoning', models.CharField(blank=True, max_length=50, null=True)),
                ('Phase', models.CharField(blank=True, max_length=25, null=True)),
                ('Year_of_Implementation', models.DateTimeField(null=True)),
                ('Area_in_square_meters', models.IntegerField(blank=True, null=True)),
                ('Zoning_with_Areas', models.CharField(blank=True, max_length=50, null=True)),
                ('NationalID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='AutoBatirApp.nationalid')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UPI',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('NationalID', models.IntegerField(blank=True, null=True, unique=True)),
                ('FirstName', models.CharField(blank=True, max_length=35, null=True)),
                ('LastName', models.CharField(blank=True, max_length=35, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('Districts', models.CharField(blank=True, max_length=35, null=True)),
                ('Sectors', models.CharField(blank=True, max_length=35, null=True)),
                ('Cells', models.CharField(blank=True, max_length=35, null=True)),
                ('villages', models.CharField(blank=True, max_length=35, null=True)),
                ('Address_street', models.CharField(blank=True, max_length=1000, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=10, null=True)),
                ('RegistrationDate', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Registration',
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('ConstructionPlan', models.FileField(null=True, upload_to='docs_const_plan/pdfs/')),
                ('LandOwnerShipDoc', models.FileField(null=True, upload_to='docs_landownership/pdfs/')),
                ('Paymentproof', models.FileField(blank=True, null=True, upload_to='Bankslip/pdfs/')),
                ('OtherDoc', models.FileField(blank=True, null=True, upload_to='docs_other/pdfs/')),
                ('MainZonecode', models.CharField(max_length=25, null=True)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('Status', models.CharField(blank=True, default='pending', max_length=10, null=True)),
                ('ApprovedBy', models.CharField(blank=True, max_length=35, null=True)),
                ('updated_at_issuedDate', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('UPI', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='AutoBatirApp.upi', verbose_name='UPI related to permit')),
                ('registration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AutoBatirApp.registration')),
            ],
            options={
                'db_table': 'Permit',
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('message', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('RegistrationID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AutoBatirApp.registration')),
            ],
            options={
                'db_table': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('NationalID', models.IntegerField(blank=True, null=True, unique=True)),
                ('FirstName', models.CharField(blank=True, max_length=35, null=True)),
                ('LastName', models.CharField(blank=True, max_length=35, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('Districts', models.CharField(blank=True, max_length=35, null=True)),
                ('Sectors', models.CharField(blank=True, max_length=35, null=True)),
                ('Cells', models.CharField(blank=True, max_length=35, null=True)),
                ('villages', models.CharField(blank=True, max_length=35, null=True)),
                ('Address_street', models.CharField(blank=True, max_length=1000, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=10, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Engineer',
            },
        ),
        migrations.CreateModel(
            name='ArchivedPermit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ConstructionPlan', models.FileField(upload_to='docs_const_plan/pdfs/')),
                ('LandOwnerShipDoc', models.FileField(blank=True, null=True, upload_to='docs_landownership/pdfs/')),
                ('Paymentproof', models.FileField(blank=True, null=True, upload_to='Bankslip/pdfs/')),
                ('OtherDoc', models.FileField(blank=True, null=True, upload_to='docs_other/pdfs/')),
                ('MainZonecode', models.CharField(blank=True, max_length=25, null=True)),
                ('Date', models.DateTimeField()),
                ('Status', models.CharField(blank=True, default='pending', max_length=10, null=True)),
                ('ApprovedBy', models.CharField(blank=True, max_length=35, null=True)),
                ('updated_at_issuedDate', models.DateTimeField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('UPI', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='AutoBatirApp.upi', verbose_name='UPI related to permit')),
                ('registration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AutoBatirApp.registration')),
            ],
        ),
    ]
